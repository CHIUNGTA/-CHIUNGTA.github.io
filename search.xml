<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>免費定時執行line(推圖篇)</title>
    <url>/2022/03/31/20220331-Notify/</url>
    <content><![CDATA[<p>繼上一篇講解怎麼用Google-App-Script定時推送訊息，但這樣就顯得有點單調，因此這篇就教大家怎麼去Google雲端硬碟中，提取圖片檔案(.jpg&#x2F;.png) 進行推送。</p>
<h1 id="Create-a-Google-Driver-Folder"><a href="#Create-a-Google-Driver-Folder" class="headerlink" title="Create a Google Driver Folder"></a>Create a Google Driver Folder</h1><ol>
<li>資料夾編號<br>相信大家都有使用Google雲端吧？這邊就不特別介紹了。新增新的資料夾後我們要把網址中的<strong>ID</strong>記下來，這個編號就好像是這個資料夾的地址，我們要透過這個地址才能知道我們要去哪個資料夾拿東西，如下圖紅框處所示，1CQH….就是這個測試用資料夾的編號。</li>
</ol>
<p><img src="/image/IT/20220331/1.png"></p>
<ol start="2">
<li>檔案編號<br>我們隨便上網選擇一張梗圖上傳，對你想要確認的檔案按右鍵，並選取「共用」鈕並點選下方的複製連結按鈕。<br><img src="/image/IT/20220331/3.png"></li>
</ol>
<p>我們將複製的字串貼出來大概會長下面的樣子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://drive.google.com/file/d/1x80oU2JFDtI1Ktkp8xG1KrAcU4LAfcAi/view?usp=sharing</span><br></pre></td></tr></table></figure>
<p>其中網址中的：<span style="color:red;">1x80oU2JFDtI1Ktkp8xG1KrAcU4LAfcAi</span>就是這個檔案的編號，我們同樣可以透過這串編號去得這個檔案的相關資訊。</p>

<p>我們知道了資料夾和檔案編號後，我們就可以開始透過Google App Script自動讀取雲端資料夾內的檔案了<strong>同樣的一次執行時，系統會和你進行安全性確認</strong>。</p>
<h1 id="Read-Google-Driver-Folder-File-By-Google-App-Script"><a href="#Read-Google-Driver-Folder-File-By-Google-App-Script" class="headerlink" title="Read Google Driver Folder File By Google App Script"></a>Read Google Driver Folder File By Google App Script</h1><p>同樣先上程式碼再慢慢解釋：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _key =<span class="string">&#x27;你申請的Line Notify Key&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 傳送貼圖與檔案名稱</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> imgObj = <span class="variable language_">this</span>.<span class="title function_">getImageFileFromDriver</span>()</span><br><span class="line">  <span class="title class_">Logger</span>.<span class="title function_">log</span>(imgObj)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">sendLineNotify</span>(</span><br><span class="line">    imgObj.<span class="property">message</span>, </span><br><span class="line">    imgObj.<span class="property">id</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 傳送line notify</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendLineNotify</span>(<span class="params">message, fileId</span>)&#123;</span><br><span class="line">   <span class="title class_">UrlFetchApp</span>.<span class="title function_">fetch</span>(<span class="string">&#x27;https://notify-api.line.me/api/notify&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;headers&#x27;</span>: &#123;</span><br><span class="line">           <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer &#x27;</span> + _key,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>:message,</span><br><span class="line">            <span class="string">&#x27;imageFile&#x27;</span>: <span class="title class_">DriveApp</span>.<span class="title function_">getFileById</span>(fileId).<span class="title function_">getBlob</span>() <span class="comment">// 透過File Id取得檔案相關資料</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 從google雲端取得圖片資料</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getImageFileFromDriver</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> folderId = <span class="string">&#x27;你Google 雲端資料夾編號&#x27;</span></span><br><span class="line">  <span class="keyword">var</span> folder = <span class="title class_">DriveApp</span>.<span class="title function_">getFolderById</span>(folderId) <span class="comment">// 取得資料夾物件</span></span><br><span class="line">  <span class="keyword">var</span> files = folder.<span class="title function_">getFiles</span>()</span><br><span class="line">  <span class="keyword">var</span> fileList = []</span><br><span class="line">  <span class="keyword">while</span> (files.<span class="title function_">hasNext</span>())&#123; <span class="comment">// 透過迴圈，把資料夾內的所有資料掃出來 </span></span><br><span class="line">    file = files.<span class="title function_">next</span>();</span><br><span class="line">    fileList.<span class="title function_">push</span>(&#123;</span><br><span class="line">       <span class="attr">message</span>: file.<span class="title function_">getName</span>(), <span class="comment">// 你檔案的名稱</span></span><br><span class="line">       <span class="attr">id</span>: file.<span class="title function_">getId</span>() <span class="comment">// 你檔案的編號</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;檔案陣列&#x27;</span>, fileList)</span><br><span class="line">  <span class="keyword">return</span> fileList[<span class="title class_">Math</span>.<span class="title function_">random</span>()*fileList.<span class="property">length</span> | <span class="number">0</span>] <span class="comment">//隨機選一個檔案往回傳</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>透過上述的程式碼就可以讀取雲端硬碟中的圖片進行傳送了，接下來我們還要再做一件事，就是當這個梗圖已經使用過了，我不想再使用時要怎麼辦呢？這個時候我們就把它移到其他資料夾即可。</p>
<h1 id="Move-File-To-used-folder"><a href="#Move-File-To-used-folder" class="headerlink" title="Move  File  To used folder"></a>Move  File  To used folder</h1><p>我們在同一個資料夾內部再新增一個資料夾，為了方便區分，我們將它命名為「已使用」。同樣的我們就可以得到一個新的資料夾編號，再依據上述的程式邏輯進行些許的調整，調整如下：<br><img src="/image/IT/20220331/4.png"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _key = <span class="string">&#x27;line notify key&#x27;</span> </span><br><span class="line"><span class="keyword">var</span> _usedFolderId = <span class="string">&#x27;已使用資料夾編號&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 傳送貼圖與檔案名稱</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 取得圖片物件</span></span><br><span class="line">  <span class="keyword">var</span> imgObj = <span class="variable language_">this</span>.<span class="title function_">getImageFileFromDriver</span>()</span><br><span class="line">  <span class="comment">// 發送line Notify</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">sendLineNotify</span>(</span><br><span class="line">    imgObj.<span class="property">message</span>, </span><br><span class="line">    imgObj.<span class="property">id</span></span><br><span class="line">  )</span><br><span class="line">  <span class="comment">// 將傳送出去的圖片，轉移到已使用的資料夾</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">moveFileToFolderById</span>(imgObj.<span class="property">id</span>, _usedFolderId)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 傳送line notify</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendLineNotify</span>(<span class="params">message, fileId</span>)&#123;</span><br><span class="line">   <span class="title class_">UrlFetchApp</span>.<span class="title function_">fetch</span>(<span class="string">&#x27;https://notify-api.line.me/api/notify&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;headers&#x27;</span>: &#123;</span><br><span class="line">           <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer &#x27;</span> + _key,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>:message,</span><br><span class="line">            <span class="string">&#x27;imageFile&#x27;</span>: <span class="title class_">DriveApp</span>.<span class="title function_">getFileById</span>(fileId).<span class="title function_">getBlob</span>() <span class="comment">// 透過File Id取得檔案相關資料</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 從google雲端取得圖片資料</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getImageFileFromDriver</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> folderId = <span class="string">&#x27;放未使用的資料夾編號&#x27;</span></span><br><span class="line">  <span class="keyword">var</span> folder = <span class="title class_">DriveApp</span>.<span class="title function_">getFolderById</span>(folderId) <span class="comment">// 取得資料夾物件</span></span><br><span class="line">  <span class="keyword">var</span> files = folder.<span class="title function_">getFiles</span>()</span><br><span class="line">  <span class="keyword">var</span> fileList = []</span><br><span class="line">  <span class="keyword">while</span> (files.<span class="title function_">hasNext</span>())&#123;</span><br><span class="line">    file = files.<span class="title function_">next</span>();</span><br><span class="line">    fileList.<span class="title function_">push</span>(&#123;</span><br><span class="line">       <span class="attr">message</span>: file.<span class="title function_">getName</span>(),</span><br><span class="line">       <span class="attr">id</span>: file.<span class="title function_">getId</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;檔案陣列&#x27;</span>, fileList)</span><br><span class="line">  <span class="keyword">return</span> fileList[<span class="title class_">Math</span>.<span class="title function_">random</span>()*fileList.<span class="property">length</span> | <span class="number">0</span>] <span class="comment">//隨機選一個檔案往回傳</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 依fileId and folderId 移動雲端硬碟內的檔案</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">moveFileToFolderById</span>(<span class="params">fileId, folderId </span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> file = <span class="title class_">DriveApp</span>.<span class="title function_">getFileById</span>(fileId) <span class="comment">// 取得檔案物件</span></span><br><span class="line">  file.<span class="title function_">moveTo</span>(<span class="title class_">DriveApp</span>.<span class="title function_">getFolderById</span>(folderId)) <span class="comment">// 將檔案依照資料夾編號進行轉移</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>執行成功後，就可以看到已使用的圖片就會自動轉移到「已使用」的資料夾當中了。<br><img src="/image/IT/20220331/5.png"><br><img src="/image/IT/20220331/6.png"></p>
<h1 id="completion"><a href="#completion" class="headerlink" title="completion"></a>completion</h1><p>我們透過Google雲端硬碟的分享功能，就可以邀請不同的好朋友一起存放好玩有趣的梗圖，減少了麻煩的手續與硬體成本，大幅降低需要codeing的部分，並配合上篇的「觸發條件」設定，就可以輕鬆建立一個簡易的定時推播機器人！</p>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>Line</tag>
        <tag>google-app-script</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝MySQL</title>
    <url>/2020/07/27/Ubuntu%E5%AE%89%E8%A3%9DMySQL/</url>
    <content><![CDATA[<p>本章節將會教您如何在虛擬機(Ubuntu)內，架設一個屬於自己的免費資料庫，並且利用DBeaver進行資料的基本操作與瀏覽。</p>
<h1 id="安裝MySQL"><a href="#安裝MySQL" class="headerlink" title="安裝MySQL"></a>安裝MySQL</h1><p>請透過ssh連接到您的虛擬機上，並且輸入下列指令：<br>(安裝Mysql伺服器與客戶端的套件)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install mysql-server</span><br><span class="line">$ sudo apt install mysql-client</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/1.PNG"></p>
<p>若安裝完成後可輸入下列指令，查看MySQL是否安裝成功，若在成功的前提下應可看到下圖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/image/IT/20200727/2.PNG"></h2><h1 id="允許-MySQL-被遠端訪問"><a href="#允許-MySQL-被遠端訪問" class="headerlink" title="允許 MySQL 被遠端訪問"></a>允許 MySQL 被遠端訪問</h1><p>此處設定係方便Windows主機透過IP連接的方式，存取虛擬機中的MySQL資料庫，因此要設定MySQL 允許被遠端訪問。該操作需要透過文字編輯器針對config設定檔進行修改，因此先岔個提，介紹一下Vim。</p>
<h3 id="Vim基本介紹與操作"><a href="#Vim基本介紹與操作" class="headerlink" title="Vim基本介紹與操作"></a>Vim基本介紹與操作</h3><p>Vim類似windows中的txt編輯器。<a href="https://zh.wikipedia.org/wiki/Vim">Vim</a>是由vi編輯器發展而來的一種文字編輯器，linux系統當中為相當常見的文字編輯器，在程式設計師中被大量使用(如同我們在python課時，使用vs code一樣)，它強調手不用離開鍵盤就可以操作，提供一種沉靜式的開發環境。<br><img src="/image/IT/20200727/3.png"></p>
<p>首先輸入下列指令，安裝vim套件(記得要輸入Y)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/2-1.PNG"></p>
<p>我們先練習一下如何使用vim進行文字編輯，我們先移到根目錄，並創建一個名為code的資料夾。<br>在圖中我們可以看到code資料夾。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> / <span class="comment">#移至根目錄</span></span><br><span class="line">$ sudo <span class="built_in">mkdir</span> code <span class="comment">#建立code資料夾</span></span><br><span class="line">$ <span class="built_in">ls</span> <span class="comment">#顯示當前路徑所有檔案與資料夾</span></span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/4.png"></p>
<p>確定有建立code資料夾後，我們移至code 資料夾中，建立一個.py檔試試看。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> code</span><br><span class="line">$ sudo vim hello.py</span><br></pre></td></tr></table></figure>
<p>重頭戲來了，當打完上面的指令後應該會看到一片漆黑，如圖。<br><img src="/image/IT/20200727/5.png"><br>此時我們輸入i，畫面就會有所變化，此時我們就可以開始針對這個py檔進行編輯。<br><img src="/image/IT/20200727/6.png"></p>
<p>此時再輸入一串python的hello world</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world! Vim&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>輸入完成後，按下Esc鍵(鍵盤左上方那顆)，再輸入<a style="color:red">:wq</a>進行存檔。<br><img src="/image/IT/20200727/7.png"></p>
<p>存檔完成後terminal會移至code資料夾中，我們再輸入下列指令執行python腳本，若正常情況下應該可以看到console中顯示「hello world! Vim」的字樣。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">$ python3 hello.py</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/8.png"></p>
<hr>
<h1 id="回到主題-允許-MySQL-被遠端訪問-你的實體電腦"><a href="#回到主題-允許-MySQL-被遠端訪問-你的實體電腦" class="headerlink" title="回到主題 允許 MySQL 被遠端訪問 (你的實體電腦)"></a>回到主題 允許 MySQL 被遠端訪問 (你的實體電腦)</h1><h3 id="1-修改-mysql-cnf"><a href="#1-修改-mysql-cnf" class="headerlink" title="1.修改 mysql.cnf"></a>1.修改 mysql.cnf</h3><p>我們先移至到&#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d資料夾中，並且利用Vim將mysqld.cnf進行修改。進入之後我們要將bind-addres &#x3D; 127.0.0.1 的部分註解起來(前面打#字)，完成後一樣輸入<a style="color:red;">:wq</a>退出Vim。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/mysql/mysql.conf.d</span><br><span class="line">$ sudo vim mysqld.cnf</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/9.png"><br><img src="/image/IT/20200727/10.png"></p>
<hr>
<h3 id="2-查看MySQL目前運行狀態與查看MySQL的帳密"><a href="#2-查看MySQL目前運行狀態與查看MySQL的帳密" class="headerlink" title="2.查看MySQL目前運行狀態與查看MySQL的帳密"></a>2.查看MySQL目前運行狀態與查看MySQL的帳密</h3><p>輸入下列指令，查看目前MySQL服務是否正在運行?</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service mysql status</span><br></pre></td></tr></table></figure>
<p>若是沒有正在執行，請再輸入下列指令，使MySQL資料庫重啟：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service mysql restart </span><br></pre></td></tr></table></figure>
<h3 id="3-登入MySQL新增使用者帳號"><a href="#3-登入MySQL新增使用者帳號" class="headerlink" title="3.登入MySQL新增使用者帳號"></a>3.登入MySQL新增使用者帳號</h3><p>接下來我們要進入MySQL建立新的使用者帳號，基於安全性的原因，故而不是使用root對外進行開放。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo mysql <span class="comment">#進入MySQL</span></span><br></pre></td></tr></table></figure>
<p>若成功進入的話，應該可以看到下圖：<br><img src="/image/IT/20200727/11.png"></p>
<p>接下來我們輸入下列指令，username是您想要設定的使用者名稱，password是此使用者帳號的密碼。<br>設置完成後我們再輸入exit退出MySQL。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>; <span class="comment">--新增使用者</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION; <span class="comment">--給予最大管理權限</span></span><br><span class="line">EXIT;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="防火牆設定"><a href="#防火牆設定" class="headerlink" title="防火牆設定"></a>防火牆設定</h3><p>MySQL預設的<a style="color:red;"><a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E8%A8%8A%E5%9F%A0">通訊埠</a></a><a style="color :red ;"> (英文為PORT)</a>為3306，我們要設定防火牆開放port 3306供外部網路進行存取，請輸入下列指令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install ufw <span class="comment">#安裝防火牆</span></span><br><span class="line">$ sudo ufw allow 3306 <span class="comment">#開放port 3306</span></span><br><span class="line">$ sudo ufw <span class="built_in">enable</span> <span class="comment">#啟動防火牆</span></span><br><span class="line">$ sudo ufw status numbered <span class="comment">#查看目前防火牆規則</span></span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200727/12.png"></p>
<hr>
<h3 id="下載資料庫管理工具-DBeaver"><a href="#下載資料庫管理工具-DBeaver" class="headerlink" title="下載資料庫管理工具(DBeaver)"></a>下載資料庫管理工具(DBeaver)</h3><p>老達在這邊推薦一款超好用的資料庫管理工具「<a href="https://zh.wikipedia.org/zh-tw/DBeaver">DBeaver</a>」，它的強大之處在於可以透過一套管理工具，連接多種不同類型的資料庫(如常見的Oracle、SQL Server、MySQL、SQLite等等)。首先我們先至<a href="https://dbeaver.io/download/">DBeaver官方網站</a>下載安裝檔，如果我們是用Windows系統的話，請點選紅框處進行下載。<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/DBeaver_logo.svg/1024px-DBeaver_logo.svg.png"><br><img src="/image/IT/20200727/installdbeaver.png"></p>
<hr>
<h3 id="DBeaver-MySQL設定"><a href="#DBeaver-MySQL設定" class="headerlink" title="DBeaver MySQL設定"></a>DBeaver MySQL設定</h3><p>DBeaver的安裝流程老達就不詳細操作了，基本是無腦安裝。安裝完成後應該可以看到乾乾淨淨的操作頁面。點選左上角紅框處新建虛擬機MySQL的連接。<br><img src="/image/IT/20200727/dbeaver.png"></p>
<p>在紅框處輸入mysql並按下enter搜尋，點選中間的MySQL+進行設定。<br><img src="/image/IT/20200727/13.png"><br>接下來輸入虛擬機ip，我們可以發現DBeaver預設已經代port 3306了，所以我們就不進行修改。並輸入我們剛剛設定的使用者名稱與密碼，並且設定Server Time Zone為Asia&#x2F;Taipei，設定好後按下右下角的Test Connection…。</p>
<p><img src="/image/IT/20200727/14.png"><br><img src="/image/IT/20200727/15.png"><br>如果沒有看到上面的成功連接畫面，並且出現<a style="color:red;"><br>Public Key Retrieval is not allowed.</a>的錯誤字串時，請至裝置屬性的設定頁面將allowPublicKeyRetrieval設定為True，調整完成後再測試看看是否可以連接。<br><img src="/image/IT/20200727/16.png"></p>
<hr>
<p>下篇會分享如何將PTX資料匯入資料庫中，透過SQL指令進行處理與分析。</p>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>MySQL</tag>
        <tag>data base</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware 與 Ubuntu 基本安裝與設定</title>
    <url>/2020/07/22/vmware-%E8%88%87-ubuntu-%E5%9F%BA%E6%9C%AC%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A/</url>
    <content><![CDATA[<p>這邊將會簡單與各位介紹如何在WINDOWS主機中安裝<a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E6%A9%9F%E5%99%A8">虛擬機器</a>去運行不同的OS執行系統，譬如說透過一台實體電腦，同時運行多種不同的作業系統，以達到降低硬體成本的目的(一種一魚多吃的概念)。</p>
<h1 id="VMbware虛擬機器軟體"><a href="#VMbware虛擬機器軟體" class="headerlink" title="VMbware虛擬機器軟體"></a>VMbware虛擬機器軟體</h1><p>業界主流使用的虛擬機器軟體大多為微軟所提供的<a href="https://zh.wikipedia.org/wiki/Hyper-V">Hyper-V</a>、甲骨公司推出的<a href="https://zh.wikipedia.org/wiki/VirtualBox">VirtualBox</a>與今天的主角：</p>
<p style="color:red;font-size:45px;"     align="center">VMware</p>

<p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;其實老達我本身是不怎麼使用虛擬機器的，主要原因在於我有一台<a href="https://zh.wikipedia.org/wiki/%E6%A0%91%E8%8E%93%E6%B4%BE">樹梅派</a>與一台於大學入學時購買的平價筆記型電腦，機齡目前約有7年左右。由於獨立顯卡掛掉，於是老達秉持著硬頸的客家精神，給電腦灌了Ubuntu作業系統當作lab機使用。<br>或許有人會問，為什麼要在Windows作業系統上使用VMeare而不是使用微軟爸爸的親兒子Hyper-V，主要原因有2個，一為Hyper-V只能在教育版、企業版與專業版Windows上面使用，一般家庭的版本是無法使用的。二為近期有利用blueStacks這個Android虛擬軟體安裝開言英語學習(當廣播聽..)，並發現blueStacks與Hyper-V會相互衝突，因此也沒有特別研究就直接轉而使用VMware了。<br><img src="/image/IT/20200722/072501.png"></p>
<h2 id="VMware下載-amp-Ubuntu-下載"><a href="#VMware下載-amp-Ubuntu-下載" class="headerlink" title="VMware下載 &amp; Ubuntu 下載"></a>VMware下載 &amp; Ubuntu 下載</h2><p>請至<a href="https://www.vmware.com/tw/products/workstation-player/workstation-player-evaluation.html">VMware官方網站</a>進行下載，下載完成之後即可開始進行安裝作業。<br><img src="/image/IT/20200722/072502.png"></p>
<p>在安裝期間也需要至<a href="https://ubuntu.com/download/desktop">Ubuntu官網</a>下載ISO檔，後續安裝虛擬組機會使用到。<br><img src="/image/IT/20200722/072502-1.png"></p>
<p>請自己在C槽中新增VM資料夾，並在VM資料夾中新增OS與VMUbuntu兩個資料夾，並將ubuntu-20.04-desktop-amd64.iso這個檔案移到OS資料夾中。<br><img src="/image/IT/20200722/072502-2.png"></p>
<h2 id="VMware安裝"><a href="#VMware安裝" class="headerlink" title="VMware安裝"></a>VMware安裝</h2><p>VMware安裝基本屬於無腦安裝，僅有最後面的一個步驟必須設定您想要切多少實體機器的效能(CPU、RAM與儲存空間等等設定)。<br>1.由於我們是採用免費試用本，因此只要勾選上面的選項即可，不需要刻意填寫下方產品驗證。<br><img src="/image/IT/20200722/072503.png"></p>
<hr>
<p>2.完成安裝後會出現下面的圖示，再點選紅框處開始建立新的虛擬主機。<br><img src="/image/IT/20200722/072503-1.png"></p>
<hr>
<p>3.選取虛擬機的檔案執行位置(類似本機的c槽)，我們按下紅圈處，將路徑指向剛剛新增的VMUbuntu資料夾。<br><img src="/image/IT/20200722/072504.png"><br><img src="/image/IT/20200722/072505.png"></p>
<hr>
<p>3.選擇要切多少硬碟空間給虛擬機器使用。<br><img src="/image/IT/20200722/072506.png"></p>
<hr>
<p>4.選擇Ubuntu Iso檔供虛擬機器運行(選取剛剛丟進OS資料夾中的ISO檔案)。<br><img src="/image/IT/20200722/072507.png"><br><img src="/image/IT/20200722/072508.png"></p>
<hr>
<p>5.設定主機名稱(再系統中的名子)與使用者名稱與密碼(這兩個很重要，設定好後請務必牢記)<br><img src="/image/IT/20200722/072509.png"></p>
<hr>
<p>6.這邊可以調整您想要的硬體配置，可點選紅框處設置更加細緻化的調整(記憶體量、可用CPU核心數….)<br><img src="/image/IT/20200722/072510.png"><br><img src="/image/IT/20200722/072510-1.png"></p>
<hr>
<p>7.點選下一步後VMware會開始自己安裝Ubuntu，再安裝完成之後，使用者可輸入自己設定的密碼進入Ubuntu操作平台。<br><img src="/image/IT/20200722/072511.png"><br><img src="/image/IT/20200722/072512.png"></p>
<hr>
<p>8.進入Ubuntu後，使用者依照下圖順序將「命令提示字元」打開<br><img src="/image/IT/20200722/072513.png"></p>
<hr>
<p>9.接下來請打下列指令更新Ubuntu驅動與packages，第一次可能會花比較長的時間進行更新。</p>
<blockquote class="blockquote-center"><p>Ubuntu 軟體更新指令 </p>
</blockquote>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure>

<blockquote class="blockquote-center"><p>安裝SSH 套件 </p>
</blockquote>
<p>安裝此套件才可以使本機透過<a href="https://zh.wikipedia.org/wiki/Secure_Shell">SSH</a>網路傳輸協議,與虛擬機進行溝通。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install openssh-server</span><br><span class="line">$ sudo systemctl status ssh.service </span><br><span class="line">$ sudo systemctl restart ssh.service</span><br></pre></td></tr></table></figure>

<blockquote class="blockquote-center"><p>安裝net-tools 套件 與 查詢虛擬機IP位置 </p>
</blockquote>
<p>接下來我們要透過ifconfig 指令查看虛擬機的ip位置，由於ifconfig在ubuntu預設是沒有安裝的，因此要先打下列指令進行安裝。(指令中的sudo 係指管理員權限 )<br>安裝完成後應該可以看到下圖的ip資訊。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install net-tools</span><br><span class="line">$ ifconfig</span><br></pre></td></tr></table></figure>

<p><img src="/image/IT/20200722/072514.png"></p>
<hr>
<p>10.接下來我們可以透過PuTTY軟體進行SSH連結，進而透過指令的方式控制虛擬機器。<br>但老達比較懶惰，直接使用Windows命令提示字元內建的ssh工具進行操控，我們只要進行一些設定即可使用。<br>詳細的設定流程就請各位參考其他大大的文章了<a href="https://kheresy.wordpress.com/2017/12/14/windows-begin-to-provide-ssh-client-and-server/">連結</a>。</p>
<p>openSSH設定好就可以透過WIN+S鍵，輸入CMD叫出命令提示字元後輸入ssh連接指令。</p>
<p style="color:red;" >user = 您Ubuntu的使用者名稱</p>
<p style="color:red;">虛擬機IP = 剛剛ifconfig 查出的ip位置</p>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh user@虛擬機IP</span><br></pre></td></tr></table></figure>
<p>如果有成功打到虛擬機器的話，會看到下面的提示，詢問你是否確定是否要連接，輸入yes。<br><img src="/image/IT/20200722/1.PNG"><br>後續會詢問你密碼是多少，如果輸入正確的話，就可以直接登入虛擬機器進行操作了。<br><img src="/image/IT/20200722/2.PNG"><br><img src="/image/IT/20200722/3.PNG"></p>
<p>如果想要登出的話，請輸入下列指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<p>下篇文章將分享如何在虛擬機上安裝Mysql，並存入PTX公共運輸公車站牌相關資料。</p>
<hr>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>免費定時執行Line Notify(推文篇)</title>
    <url>/2022/03/30/%E5%85%8D%E8%B2%BB%E5%AE%9A%E6%99%82%E5%9F%B7%E8%A1%8CLine%20Notify%20%E5%8A%9F%E8%83%BD(%E6%8E%A8%E6%96%87%E7%AF%87)/</url>
    <content><![CDATA[<p>從學校畢業出社會一段時間後，不知道大家有沒有一種感覺，就是有的沒有的Line工作群組會多的莫名其妙，然而在工作之餘還是需要休閒娛樂一下。因此我們公司私下建立了一個 <del>靠北上司</del> 抒發身心壓力的群組，專門給大家發一些有的沒有個搞笑圖。<br><img src="/image/IT/20220330/1.jpg"></p>
<p>但是有在職場上工作的小夥伴就知道，這種群組是很危險的，一個擦槍走火(例如主管看到啥的)，就有可能造成不可挽回的遺憾；也有可能自己貼的一張梗圖，不小心使其他人的玻璃心碎掉，或是讓有心之人有了對號入座的機會。因此本魯建議使用Line notify發送梗圖，既方便又不會傷了大家的面子xd，因此接下來分上下兩篇介紹如何從google雲端資料夾中拿梗圖，並發送到Line群組中。</p>
<h1 id="申請一個Line-Notify-Token"><a href="#申請一個Line-Notify-Token" class="headerlink" title="申請一個Line Notify Token"></a>申請一個Line Notify Token</h1><ol>
<li><p>進入 <a href="https://notify-bot.line.me/zh_TW/">Line Notify 官網</a>並且點選右上角的登入按鈕。</p>
</li>
<li><p>登入你平常使用的Line帳號密碼，登入後點選右上角的帳號，並且點選個人頁面選項：<br><img src="/image/IT/20220330/2.png"></p>
</li>
<li><p>點選並進入頁面後，拉到最下面就可以看到「發行存取權杖」的按鈕，並按照以下的圖片說明進行操作即可。<br><img src="/image/IT/20220330/3.png"><br><img src="/image/IT/20220330/4.png"><br><img src="/image/IT/20220330/5.png"></p>
</li>
</ol>
<p>到這邊申請就告一段落了，接下來將目光轉移到Google app script當中。</p>
<h1 id="免費建立一個API-推送服務"><a href="#免費建立一個API-推送服務" class="headerlink" title="免費建立一個API 推送服務"></a>免費建立一個API 推送服務</h1><ol>
<li><p>接下來我們要透過一個免費的平台，讓它可以定時幫我們去呼叫Line Notify 去傳送訊息，首先我們先進入<a href="https://www.google.com/script/start/">Google App Script官網</a>並點選右上角的「Start Scripting Home」按鈕。<br><img src="/image/IT/20220330/6.png"></p>
</li>
<li><p>點選左上角的「新增專案」,系統就會生成一個專案檔給你了，如下圖。<br><img src="/image/IT/20220330/7.png"><br><img src="/image/IT/20220330/8.png"></p>
</li>
<li><p>為避免有些人不懂這些東西是什麼鬼東西，我們先依照下面流程操作一遍：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式碼範例</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">firstFunction</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">Logger</span>.<span class="title function_">log</span>(<span class="string">&#x27;這是我的第一個方法！！！&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20220330/9.png"></p>
</li>
</ol>
<p>執行後，有沒有發現比想像中的還要簡單呢？<br>接下來重頭戲來了！</p>
<ol start="4">
<li>直接上程式碼給大家使用</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _key =<span class="string">&#x27;你剛剛複製的Line Notify 權杖&#x27;</span> <span class="comment">//line notify token</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 傳送line notify</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendLineNotify</span>(<span class="params">message</span>)&#123;</span><br><span class="line">   <span class="title class_">UrlFetchApp</span>.<span class="title function_">fetch</span>(<span class="string">&#x27;https://notify-api.line.me/api/notify&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;headers&#x27;</span>: &#123;</span><br><span class="line">           <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer &#x27;</span> + _key,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>:message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 早上說你好</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">goodMorning</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">sendLineNotify</span>(<span class="string">&#x27;早安啊&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第次執行<strong>goodMorning</strong>這個方法時，系統會要求你開啟權限，基本也就如下圖所，一路點同意即可。<br><img src="/image/IT/20220330/10.png"><br><img src="/image/IT/20220330/11.png"><br><img src="/image/IT/20220330/12.png"><br><img src="/image/IT/20220330/13.png"></p>
<ol start="5">
<li>執行完成後你選擇的Line Notify就會傳送訊息到你指定的聊天群組當中了！<br><img src="/image/IT/20220330/14.png"></li>
</ol>
<h1 id="自動執行設定"><a href="#自動執行設定" class="headerlink" title="自動執行設定"></a>自動執行設定</h1><ol>
<li>點選左邊的「觸發條件」，並新增觸發條件，執行方法中我們選擇<strong>goodMorning</strong>這個方法，並且依照圖片中的設定進行調整，那系統每天早上7點到8點之間，系統會自動向你說一聲早安（溫腥）。<br><img src="/image/IT/20220330/16.png"><br><img src="/image/IT/20220330/17.png"></li>
</ol>
<h2 id="需要注意事項！"><a href="#需要注意事項！" class="headerlink" title="需要注意事項！"></a><strong>需要注意事項！</strong></h2><p>如果你是點選1人以上的聊天群組的話，你就要邀情Line Notify到你的聊天群組當中，否則它是不會呼叫的！<br><img src="/image/IT/20220330/15.png"></p>
<h1 id="下篇預告"><a href="#下篇預告" class="headerlink" title="下篇預告"></a>下篇預告</h1><p>下一篇會教大家使用Google雲端資料夾抓圖片發送，敬請期待～</p>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>Line</tag>
        <tag>google-app-script</tag>
      </tags>
  </entry>
  <entry>
    <title>大阪市區巡禮</title>
    <url>/2017/11/21/%E5%A4%A7%E9%98%AA%E5%B8%82%E5%8D%80%E5%B7%A1%E7%A6%AE/</url>
    <content><![CDATA[<h1 id="大阪古城"><a href="#大阪古城" class="headerlink" title="大阪古城"></a>大阪古城</h1><p><img src="/image/travel/2017/3183.jpg"></p>
<blockquote class="blockquote-center"><p>大阪城 護城河一景 </p>
</blockquote>
<br>
大阪城座落於日本大阪市中央區，為大阪市著名的地標之一，為日本歷史上三大名城之一。在交通方面，主要入口為鄰近大阪市督營地鐵中央線與谷町線交會處的谷町四丁目站，交通可謂是相當便捷!
---

<h1 id="難波宮跡遺址群"><a href="#難波宮跡遺址群" class="headerlink" title="難波宮跡遺址群"></a>難波宮跡遺址群</h1><p><img src="/image/travel/2017/%E9%9B%A3%E6%B3%A2%E9%81%BA%E5%9D%80.jpg"></p>
<p align="center">難波宮跡遺址群</p>

<p>距離大阪城入口最近的車站口為谷町四丁目站的9號出口，出車站後第一眼瞧見的即是「法円坂遺跡復元倉庫」，為古墓時代(西元300~600年間)的修復版倉庫建築物，為當地的地標之一。鄰近大阪城、難波宮跡等重要文化遺址上，大阪歷史博物館理所應當也設立於此。</p>
<!-- ```c#
Console.WriteLine("HELLO");
Console.WriteLine("World!!") ;
Console.ReadLine() ; 
``` -->




]]></content>
      <categories>
        <category>老達遊記</category>
      </categories>
      <tags>
        <tag>travel</tag>
        <tag>自由行</tag>
      </tags>
  </entry>
  <entry>
    <title>更新zero-ssl憑證於IIS平台</title>
    <url>/2021/10/16/%E6%9B%B4%E6%96%B0zero-ssl%E6%86%91%E8%AD%89%E6%96%BCIIS%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>今天剛好要寫一份更新SSL的流程文件，所以就順便寫在這個部落格中避免將來忘記。整個更新的步驟分為兩項，第一項為更新申請新的SSl憑證，第二則是將改憑證設定為IIS中，以下範例皆是基於<a href="https://manage.sslforfree.com/login?u=https://manage.sslforfree.com/dashboard">sslforfree.com</a>網站進行申請的，因此下列說明也是在該基礎上進行講解。</p>
<h1 id="更新SSL-憑證"><a href="#更新SSL-憑證" class="headerlink" title="更新SSL 憑證"></a>更新SSL 憑證</h1><ol>
<li><p>登入<a href="https://manage.sslforfree.com/login?u=https://manage.sslforfree.com/dashboard">sslforfree.com</a>操作儀表板中。<br><img src="/image/IT/20211016/01.png"></p>
</li>
<li><p>成功登入後，我們可以查看到在該帳號下面所有的SSl狀況與過期時間，在本範例中為2021&#x2F;10&#x2F;17會過期，因此我們需要按下renew進行更新申請。<br><img src="/image/IT/20211016/02.png"></p>
</li>
<li><p>確認Domain Name沒有錯誤。<br><img src="/image/IT/20211016/03.png"></p>
</li>
<li><p>選擇90天期限的驗證。<br><img src="/image/IT/20211016/04.png"></p>
</li>
<li><p>選擇免費方案<br><img src="/image/IT/20211016/05.png"></p>
</li>
<li><p>選擇http文件上傳驗證，並下載身份驗證文件，複製到IIS主機.&#x2F;well-known&#x2F;pki-validation&#x2F;中。<br><img src="/image/IT/20211016/06.png"><br><img src="/image/IT/20211016/07.png"></p>
</li>
<li><p>確認下列連結中，是否可以看到文件內容。<br><img src="/image/IT/20211016/08.png"></p>
</li>
<li><p>下載證書.zip，解壓縮後會取得3個檔案。<br><img src="/image/IT/20211016/09.png"><br><img src="/image/IT/20211016/10.png"></p>
</li>
<li><p>輸入以下指令，建立IIS所使用的憑證文件，指令中的檔案路徑即為上一步解壓縮的三個文件，輸出文件(-out)副檔名皆為.pfx。</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl  pkcs12 -<span class="built_in">export</span> -out /Users/Downloads/spltruck.com/spltrack20211015.pfx -inkey /Users/Downloads/spltruck.com/private.key  -<span class="keyword">in</span> /Users/Downloads/spltruck.com/certificate.crt  -certfile /Users/Downloads/spltruck.com/ca_bundle.crt</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20211016/11.png"></p>
<h1 id="IIS憑證更新流程"><a href="#IIS憑證更新流程" class="headerlink" title="IIS憑證更新流程"></a>IIS憑證更新流程</h1><ol start="10">
<li><p>上述指令完成後會取得一個.pfx檔，將其複製到IIS的Ｃ槽根目錄中。<br><img src="/image/IT/20211016/12.png"></p>
</li>
<li><p>打開IIS依以下步驟進行操作：<br><img src="/image/IT/20211016/13.png"><br><img src="/image/IT/20211016/14.png"><br><img src="/image/IT/20211016/15.png"><br><img src="/image/IT/20211016/16.png"><br><img src="/image/IT/20211016/17.png"><br><img src="/image/IT/20211016/18.png"></p>
</li>
<li><p>上述步驟完成後，透過瀏覽器開啟目標網站，確認過期時間是否有更新為90天後的日期，若更新完成則表示成功延長SSL的使用期間，搞完收工。<br><img src="/image/IT/20211016/19.png"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>IIS</tag>
        <tag>SSl</tag>
      </tags>
  </entry>
  <entry>
    <title>將PTX資料透過Excel與DBeaver匯入至資料庫中</title>
    <url>/2020/08/03/%E5%B0%87PTX%E8%B3%87%E6%96%99%E8%BC%B8%E5%85%A5%E8%87%B3%E8%B3%87%E6%96%99%E5%BA%AB%E4%B8%AD/</url>
    <content><![CDATA[<p>本章節將會教您如何從PTX服務平台<a href="https://ptx.transportdata.tw/PTX/">公共運輸整合資訊流通服務平台</a>，撈取政府公開的公車站牌或是即時的公車位置資料，並且將資料匯入資料庫當中。</p>
<h1 id="PTX資料撈取與儲存"><a href="#PTX資料撈取與儲存" class="headerlink" title="PTX資料撈取與儲存"></a>PTX資料撈取與儲存</h1><h2 id="PTX-API-服務"><a href="#PTX-API-服務" class="headerlink" title="PTX API 服務"></a>PTX API 服務</h2><p>首先我們先進入<a href="https://ptx.transportdata.tw/PTX/">PTX官方網站</a>，點選紅框處的「線上API說明」。<br><img src="/image/IT/20200803/01.png"></p>
<p>點選後我們可以看到有許多API，可以提供給我們進行撈取使用，這邊就先以公路客運公車站牌為例，點選<a href="https://ptx.transportdata.tw/MOTC#!/InterCityBus/InterCityBusApi_StopOfRoute">GET &#x2F;v2&#x2F;Bus&#x2F;StopOfRoute&#x2F;InterCity 取得公路客運路線與站牌資料</a>，可以看到這個API有提供許多可供篩選的選項，例如只要前50筆資料或是只要某縣市範圍的公車站牌資料等等…<br>我們將滑鼠移到<a style="color:red">$format</a>，點選XML格式並按下左下角的「Try it out!」。<br><img src="/image/IT/20200803/02.jpg"></p>
<p>點開後我們可以看到PTX幫 <a href="%E5%B0%87PTX%E8%B3%87%E6%96%99%E8%BC%B8%E5%85%A5%E8%87%B3%E8%B3%87%E6%96%99%E5%BA%AB%E4%B8%AD.md">將PTX資料輸入至資料庫中.md</a> 我們預設帶出30筆公車站牌資料，在URI中可以觀察到<a style="color:red">top&#x3D;30</a>，意思是我們只要取前30筆資料即可；<a style="color:red">format&#x3D;JSON</a>的意思則是要求PTX將我們要查詢的資料依照<a href="https://zh.wikipedia.org/wiki/XML">XML</a>或是<a href="https://zh.wikipedia.org/wiki/JSON">JSON</a>的資料格式回傳，方便我們後續針對資料進行處理。我們先複製紅框處的Request URI，並且打開EXCEL。<br><img src="/image/IT/20200803/03.jpg"></p>
<h2 id="XML資料匯入Excel"><a href="#XML資料匯入Excel" class="headerlink" title="XML資料匯入Excel"></a>XML資料匯入Excel</h2><p>打開Excel後點選「資料」→「取得外部資料」→「從其他來源」→「從XML資料匯入」，然後將剛剛複製下列的URI貼至檔案名稱並按「開啟」。</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/InterCity?$top=30&amp;$format=XML</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200803/04.png"><br><img src="/image/IT/20200803/05.jpg"><br>過程中Excel會問你XML資料結構與資料匯入位置等問題，我們直接按「確定」就可以了。<br><img src="/image/IT/20200803/06.jpg"><br><img src="/image/IT/20200803/07.jpg"></p>
<p>過一段時間後，Excel會自動透過REST API從PTX中撈取30條公路客運站牌資料，並且將其匯入活頁簿當中。如果我們想要撈取<a style="color:red">全部的公車站牌資料</a>，則須將URI中的top&#x3D;30刪除，改成下列網址，但由於資料量較為龐大，所以可能撈取的時間也會相對較久。<a style="color:red">公車站牌資料撈取完成後，將Excel以CSV的格式儲存於桌面中，待下一步匯入使用。</a></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/InterCity?$format=XML</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200803/08.jpg"></p>
<h1 id="Csv資料匯入MySQL中"><a href="#Csv資料匯入MySQL中" class="headerlink" title="Csv資料匯入MySQL中"></a>Csv資料匯入MySQL中</h1><h2 id="DBeaver-CSV-Database"><a href="#DBeaver-CSV-Database" class="headerlink" title="DBeaver CSV Database"></a>DBeaver CSV Database</h2><p>打開DBeaver這個SQL Client軟體，並且新增新的資料庫，這邊選擇CSV作為資料庫類型。<br><img src="/image/IT/20200803/09.jpg"><br>點選Browse，選擇桌面作為路徑，接著點選Test Connection測試該路徑中是否有相對應的資料，若確任沒有問題後點選完成。<br><img src="/image/IT/20200803/10.jpg"></p>
<p>此時回到資料庫進行查看，可以看到一個名為CSV - Desktop的資料庫，點開後打開資料表，在資料表中可以看到Stop資料表。對Stop資料表按右鍵，點選「在SQL Console中查看資料」(中英文有所差異)，如果搜尋出來時發現中文為亂碼的狀態，我們透過記事本將Stop.csv檔案打開，看右下角的編碼格式，若是ANSI則另存新檔並挑選UTF-8格式。<br><img src="/image/IT/20200803/11.jpg"><br><img src="/image/IT/20200803/12.jpg"></p>
<p>上述操作完成後，我們就可以透過SQL語法正常操作公路客運的資料，例如…</p>
<p>透過條件式篩選基隆地區的公車站牌。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Stop <span class="keyword">WHERE</span> LocationCityCode <span class="operator">=</span><span class="string">&#x27;KEE&#x27;</span> ;</span><br></pre></td></tr></table></figure>
<p>或是統計基隆地區有多少站牌。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> Stop <span class="keyword">WHERE</span> LocationCityCode <span class="operator">=</span><span class="string">&#x27;KEE&#x27;</span> ;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20200803/13.jpg"></p>
<h2 id="將CSV-Database匯入MySQL"><a href="#將CSV-Database匯入MySQL" class="headerlink" title="將CSV Database匯入MySQL"></a>將CSV Database匯入MySQL</h2><p>對Stop點選右鍵，並按輸出資料。<br><img src="/image/IT/20200803/14.jpg"><br>點選Database作為輸出目標。<br><img src="/image/IT/20200803/15.jpg"><br>點選以前新增的Ubuntu虛擬機與資料庫。<br><img src="/image/IT/20200803/16.jpg"><br><img src="/image/IT/20200803/17.jpg"></p>
<p>點選好目標資料庫後，目標資料夾會呈現「?」，此時點選左下角的Auto assign，正常情況下會預設與資料來源表相同名稱(Stop);<br>接下來點選Columns..來調整一下每個欄位的字串長度。<br><img src="/image/IT/20200803/18.jpg"><br>將紅框處的string(32767)更改為string(100)，UpdateTime欄位的屬性改為Datetime，全部修改完成後點選OK。<br><img src="/image/IT/20200803/18-1.jpg"></p>
<p>當你看到這個畫面時，表示DBeaver準備好開始幫你從CSV資料庫複製資料至MySQL當中，Start大力地給他按下去。<br><img src="/image/IT/20200803/19.jpg"><br><img src="/image/IT/20200803/20.jpg"></p>
<p>若運行完成後，csv table的資料就會複製到MySQL資料庫內，未來若專題或是工作上遇到資料量龐大的CSV檔，EXCEL無法處理時，都可以透過這個方法進行資料上的處理。<br><img src="/image/IT/20200803/21.jpg"></p>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>PTX</tag>
        <tag>database</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>輕鬆建立免費資料庫與RESTful-API服務-儲存篇</title>
    <url>/2021/05/22/%E8%BC%95%E9%AC%86%E5%BB%BA%E7%AB%8B%E5%85%8D%E8%B2%BB%E8%B3%87%E6%96%99%E5%BA%AB%E8%88%87RESTful-API%E6%9C%8D%E5%8B%99-%E5%84%B2%E5%AD%98%E7%AF%87/</url>
    <content><![CDATA[<p>接續上篇文章透過Google Apps Script(以下簡稱GAS)建立免費的RESTful服務，將資料儲存至Google試算表中。</p>
<h1 id="撰寫資料接口"><a href="#撰寫資料接口" class="headerlink" title="撰寫資料接口"></a>撰寫資料接口</h1><p>同樣使用上篇所使用的Google試算表，使用GAS撰寫接收資料使用的接口，撰寫完成後記得要進行發布。<br>程式碼如下:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接收資料接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doPost</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e))</span><br><span class="line">                         .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>); <span class="comment">//將傳送至該方法中的參數物件，轉為JSON 字串吐回</span></span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">   <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="測試POST接口"><a href="#測試POST接口" class="headerlink" title="測試POST接口"></a>測試POST接口</h1><h2 id="POST-MAN-軟體"><a href="#POST-MAN-軟體" class="headerlink" title="POST MAN 軟體"></a>POST MAN 軟體</h2><p>  由於瀏覽器只能呼叫GET類型的方法，因此在開發時需要透過POST-MAN模擬服務請求，下列連結為<a href="https://ithelp.ithome.com.tw/articles/10195738">安裝連結</a>在此就不再贅述。</p>
<h2 id="使用POST-MAN-呼叫-doPost"><a href="#使用POST-MAN-呼叫-doPost" class="headerlink" title="使用POST MAN 呼叫 doPost"></a>使用POST MAN 呼叫 doPost</h2><p>  安裝完成後新增一筆任務，並依照下圖進行呼叫資料的調配。<br><img src="/image/IT/20210522/1.jpg"></p>
<ul>
<li>JSON資料範例</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;addUser&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;路人甲&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;路人乙&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>  送出後我們可以得到GAS回傳的資料如下圖所示，在回傳的資料中我們可以看到postData中的contents夾帶我們剛剛傳送的資料，透過這個方法我們就可以了解，我們實際傳到GAS中的資料到底是長怎樣，這樣有助於我們後續的開法與偵錯。</p>
<p><img src="/image/IT/20210522/2.jpg"></p>
<h1 id="撰寫程式"><a href="#撰寫程式" class="headerlink" title="撰寫程式"></a>撰寫程式</h1><h2 id="串寫儲存資料到Google試算表方法"><a href="#串寫儲存資料到Google試算表方法" class="headerlink" title="串寫儲存資料到Google試算表方法"></a>串寫儲存資料到Google試算表方法</h2><p>介紹完上述API接收資料的基本使用方法後，接下來回到今天的正題，如何將資料寫入Google試算表中，不廢話直接上程式碼:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _sheetId=<span class="string">&#x27;你的Google Sheet id&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> _gid=<span class="string">&#x27;活頁簿id&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接收POST API接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doPost</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> response =<span class="literal">null</span>; <span class="comment">//建立回應物件</span></span><br><span class="line">    <span class="keyword">var</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e.<span class="property">postData</span>.<span class="property">contents</span>) <span class="comment">//將傳入的資料由json字串轉為物件</span></span><br><span class="line">    <span class="keyword">if</span>(data.<span class="property">method</span> ==<span class="string">&#x27;addUser&#x27;</span>)&#123; <span class="comment">//判別方法 -&gt;如果是addUser則進行資料新增</span></span><br><span class="line">        response = <span class="title function_">addUser</span>(data)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      response=&#123;<span class="string">&#x27;message&#x27;</span>:<span class="string">&#x27;查無方法&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(response))</span><br><span class="line">                         .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>); <span class="comment">//將文字轉為JSON格式</span></span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err))</span><br><span class="line">                         .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>); <span class="comment">//將文字轉為JSON格式</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 增加角色方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addUser</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> sheet =<span class="title class_">SpreadsheetApp</span>.<span class="title function_">openById</span>(_sheetId)</span><br><span class="line">  <span class="keyword">var</span> googleSheet = <span class="title function_">getSheetByGid</span>(sheet ,_gid)</span><br><span class="line">  data.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">x</span>=&gt;</span>&#123;</span><br><span class="line">    googleSheet.<span class="title function_">appendRow</span>([</span><br><span class="line">      <span class="title class_">ReadMaxId</span>(googleSheet)+<span class="number">1</span>,</span><br><span class="line">      x.<span class="property">Name</span>,</span><br><span class="line">      x.<span class="property">Class</span></span><br><span class="line">  ])</span><br><span class="line"> &#125;)</span><br><span class="line">  <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>:<span class="string">&#x27;儲存成功&#x27;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取得試算表物件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSheetByGid</span>(<span class="params">spreadsheet, gid</span>)&#123;</span><br><span class="line">    gid = +gid || <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> res_ = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">var</span> sheets_ = spreadsheet.<span class="title function_">getSheets</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = sheets_.<span class="property">length</span>; i--; )&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(sheets_[i].<span class="title function_">getSheetId</span>() );</span><br><span class="line">        <span class="keyword">if</span>(sheets_[i].<span class="title function_">getSheetId</span>() === gid)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(sheets_[i].<span class="title function_">getSheetId</span>());</span><br><span class="line">            res_ = sheets_[i];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res_.<span class="title function_">getSheetId</span>());</span><br><span class="line">    <span class="keyword">return</span> res_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取得該試算表最左邊欄位最新值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ReadMaxId</span>(<span class="params">googleSheet</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> allData = googleSheet.<span class="title function_">getSheetValues</span>( googleSheet.<span class="title function_">getLastRow</span>(), <span class="number">1</span>, googleSheet.<span class="title function_">getLastRow</span>(), <span class="number">1</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(allData[<span class="number">0</span>][<span class="number">0</span>]) ;</span><br><span class="line">  <span class="keyword">return</span> allData[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上述程式碼中的「_gid」是Google試算表中每個不同試算表的唯一編號，如下圖所示。如果我想將資料儲存至另外的活頁簿中，我就必須將Google幫我們預設的0改為新的「gid」編號。</p>
<ul>
<li><p>原先預設的編號(gid)<br><img src="/image/IT/20210522/3.jpg"></p>
</li>
<li><p>新增活頁簿後，Google會產生新的gid<br><img src="/image/IT/20210522/4.jpg"></p>
</li>
</ul>
<p>ReadMaxId 則是為了建立流水號而使用的一個小方法，取得A欄最下方的資料，也就是最大值的概念，取到目前最大數值後再進行加總，這樣就可以完成建立流水號的功能了，接下來讓我們再回到POST-MAN進行實作的部分。</p>
<h1 id="最後驗收"><a href="#最後驗收" class="headerlink" title="最後驗收"></a>最後驗收</h1><p>回到POST-MAN上，我們修改掉最後部屬的網址後，就可以大力地按下送出，如果不出意外的話，我們可以得到下面的訊息:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;儲存成功&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20210522/5.jpg"></p>
<p>我們再回到Google試算表中，我們就可以看到剛剛送出的資料，已經乖乖地躺在試算表中了。<br><img src="/image/IT/20210522/6.jpg"></p>
<p>有人會問透過Google試算表收集API的好處是啥，我自己架資料庫它不香嗎?我大致總結了下列三點：</p>
<ol>
<li><p>不必處理硬體與網路問題</p>
<p> 當我們可能練習寫一些簡單的網頁或是應用程式時，我們可以用極短的時間完成基本的資料CRUD功能，而且完全不避考慮內網外網還是IP或是DNS等等，聽都沒聽過的問題。</p>
</li>
<li><p>提高使用者(<del>a.k.a problen maker</del>)的使用彈性</p>
<p> 由於資料是儲存在Google試算表中，這樣使用者就不用透過網頁查看統計報表，只要將試算表權限開放給想要查詢的人員即可。<del>(就不用使用者和開發人員來來回回的鬼打牆了…)</del></p>
</li>
<li><p>不受環境影響</p>
<p> 程式開發時的開發環境將會嚴重影響開發進度，但都集中於Google上面的話，我們只要確保瀏覽器可以正常運行的話，不論是Mac還是Windows甚至是iPad都可以愉快地玩耍，何樂不為?</p>
</li>
</ol>
<p>打完收工~感謝你看到最後!</p>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>google-app-script</tag>
      </tags>
  </entry>
  <entry>
    <title>輕鬆建立免費資料庫與RESTful-API服務</title>
    <url>/2021/04/26/%E8%BC%95%E9%AC%86%E5%BB%BA%E7%AB%8B%E5%85%8D%E8%B2%BB%E8%B3%87%E6%96%99%E5%BA%AB%E8%88%87RESTful%E6%9C%8D%E5%8B%99/</url>
    <content><![CDATA[<p>在網頁開發過程中，大多需要一個後端服務，提供開發者取得或儲存資料，以確認前端網頁寫法是否正確，大多情況之下均是透過本地端執行編譯後端服務。但若應用場景擴及至<strong>外網環境</strong>時，後端伺服器的架設成本就會變的相當之高()，常見的方式多為使用免費&#x2F;付費的虛擬主機(Virtual Host)或是使用<a href="https://cloud.google.com/appengine/?hl=zh-tw&utm_source=google&utm_medium=cpc&utm_campaign=japac-TW-all-zh-dr-bkws-all-super-trial-e-dr-1009882&utm_content=text-ad-none-none-DEV_c-CRE_437849980448-ADGP_Hybrid%20%7C%20BKWS%20-%20EXA%20%7C%20Txt%20~%20Compute%20~%20App%20Engine_app%20engine-google%20app%20engine-en-KWID_43700031884576212-kwd-5245655962&userloc_9040380-network_g&utm_term=KW_google%20app%20engine&gclid=Cj0KCQjwppSEBhCGARIsANIs4p6ZQAX0vDAhrdm0kmcdS9sfNnbAw5Hzxf2i8N1Fr2DXXI2YOEyDblcaAkjVEALw_wcB&gclsrc=aw.ds">Google app Engine</a>這類的應用程式代管平台，這對於只是要單純確認前端程式是否有誤的新手小白來說過於麻煩，因此下列將利用Google apps script，建立簡易型的資料存取API 服務。</p>
<h1 id="什麼是Google-apps-script"><a href="#什麼是Google-apps-script" class="headerlink" title="什麼是Google apps script ?"></a>什麼是Google apps script ?</h1><p><img src="https://miro.medium.com/max/996/1*J6Qm1Gr3RaG1oVPW5v4-0Q.png"></p>
<p>簡單來說就是Google透過基於javascript的語法，將Google家中多數的服務進行串聯，提供使用者進行<strong>客製化</strong>的服務使用。目前在使用上多為免費，雖說在呼叫次數上有額度限制，但對於一般非商業使用者是綽綽有餘的。</p>
<h1 id="如何開始"><a href="#如何開始" class="headerlink" title="如何開始?"></a>如何開始?</h1><h2 id="建立Google試算表"><a href="#建立Google試算表" class="headerlink" title="建立Google試算表"></a>建立Google試算表</h2><ol>
<li>首先在<a href="https://drive.google.com/drive/u/0/">Google雲端硬碟</a>中隨意新增的資料夾，並新增一個「Google試算表」。<br><img src="/image/IT/20210423/1.jpg"></li>
</ol>
<h2 id="熟悉Google-Apps-Script編輯器"><a href="#熟悉Google-Apps-Script編輯器" class="headerlink" title="熟悉Google Apps Script編輯器"></a>熟悉Google Apps Script編輯器</h2><ol start="2">
<li><p>進入Google試算表 後，點選工具 -&gt; 指令碼編輯器，隨後系統將會將你導至Google Apps Script的編輯頁面，我們可以先針對左上方的專案名稱進行編輯，改成自己喜歡的名稱。<br><img src="/image/IT/20210423/2.png"><br><img src="/image/IT/20210423/3.jpg"></p>
</li>
<li><p>常用功能如下圖所示，A區為程式碼編輯區塊，我們可以在此撰寫程式碼相關邏輯或呼叫Google服務，如試算表、雲端硬碟、翻譯等日常生活中常見的<strong>谷歌</strong>服務；B選項為主編輯頁面，在此頁面可進行方法偵錯與程式碼發佈；C為觸發條件設定區，簡單來說就是可以在固定時間執行特定方法，如在每個交易日13:30過後，將今日股市收盤價儲存等，日常性的固定操作；D為該專案整體服務的紀錄檔(logs)，在此可以查看所有的方法執行紀錄。<br><img src="/image/IT/20210423/4.jpg"></p>
<h1 id="開始寫程式囉"><a href="#開始寫程式囉" class="headerlink" title="開始寫程式囉!"></a>開始寫程式囉!</h1></li>
</ol>
<ul>
<li><strong>基本迴圈</strong><br>請在A區撰寫下列程式碼，按下儲存鍵選取hello方法並按下執行，即可看到10次「Hello Google Apps Script」。</li>
</ul>
<p><strong>迴圈程式碼範例</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello Google Apps Script:<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20210423/5.jpg"></p>
<ul>
<li><strong>建立例外訊息查看機制</strong><br>在開發Api服務時往往會遇到意料之外的情形，此時就需要透過<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/try...catch">try…catch機制</a>取得錯誤訊息，方便後續開發除錯使用，下列為try..catch的基本寫法。</li>
</ul>
<p><strong>例外程式碼範例</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doGet</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;發生例外狀況&#x27;</span>);<span class="comment">//模擬系統產生例外狀況</span></span><br><span class="line">    <span class="keyword">var</span> data =&#123;<span class="string">&quot;Message&quot;</span>:<span class="string">&quot;Hello World!&quot;</span>&#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data))</span><br><span class="line">      .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);<span class="comment">//顯示錯誤訊息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/image/IT/20210423/6.jpg"></p>
<h2 id="API服務建立"><a href="#API服務建立" class="headerlink" title="API服務建立"></a>API服務建立</h2><h3 id="API程式方法撰寫"><a href="#API程式方法撰寫" class="headerlink" title="API程式方法撰寫"></a>API程式方法撰寫</h3><p>Google Apps Script的API接口預設方法為「doGet、doPost、doPut與doDelete」，因此我們可以先透過下列程式碼，撰寫RESRful GET Type的API。</p>
<p><strong>API服務範例</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doGet</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data =&#123;<span class="string">&quot;Message&quot;</span>:<span class="string">&quot;Hello World!&quot;</span>&#125;;<span class="comment">//模擬取的的資料</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data))</span><br><span class="line">      .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>); <span class="comment">//將文字轉為JSON格式</span></span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(err);<span class="comment">//顯示錯誤訊息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="進行部署作業"><a href="#進行部署作業" class="headerlink" title="進行部署作業"></a>進行部署作業</h3><p>點選右上角部署 &amp;rarr; 新增部署作業 &amp;rarr; 設定 &amp;rarr; 勾選「網頁應用程式」、「API執行檔」 &amp;rarr; 部署，即可完成部署，並會取得一組網址，我們將其複製貼到瀏覽器中即可得到我們要的答案。<br><img src="/image/IT/20210423/7.jpg"><br><img src="/image/IT/20210423/8.jpg"><br><img src="/image/IT/20210423/9.jpg"><br><strong>取的JSON格式的資料</strong><br><img src="/image/IT/20210423/10.jpg"></p>
<h2 id="讀取Google-試算表資料"><a href="#讀取Google-試算表資料" class="headerlink" title="讀取Google 試算表資料"></a>讀取Google 試算表資料</h2><p>在這邊我們要將doGet方法中的<strong>data</strong>改成試算表中的資料，首先我們先將下表資料複製到試算表中。</p>
<table>
<thead>
<tr>
<th>Id</th>
<th>Name</th>
<th>Class</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Jim</td>
<td>A</td>
</tr>
<tr>
<td>2</td>
<td>Tom</td>
<td>A</td>
</tr>
<tr>
<td>3</td>
<td>Pop</td>
<td>B</td>
</tr>
<tr>
<td>4</td>
<td>yam</td>
<td>B</td>
</tr>
<tr>
<td>5</td>
<td>lol</td>
<td>B</td>
</tr>
<tr>
<td>6</td>
<td>Aoo</td>
<td>C</td>
</tr>
<tr>
<td>7</td>
<td>Voo</td>
<td>C</td>
</tr>
</tbody></table>
<p><img src="/image/IT/20210423/11.jpg"></p>
<p>接下來我們將目光移到試算表的網址中，將紅框處的部分複製下來，他們分別是<font color=red>試算表</font>與<font color=blue>活頁簿</font>的ID，後續我們將會透過他搜尋我們要的資料。</p>
<h2 id="引用試算表服務"><a href="#引用試算表服務" class="headerlink" title="引用試算表服務"></a>引用試算表服務</h2><p>由於我們要使用Google試算表的功能與服務，因此我們要點選「服務」，並新增「Google Sheets API」服務，提供本專案可以使用的服務。<br><img src="/image/IT/20210423/12.jpg"></p>
<h2 id="透過Apps-Script讀取Google試算表資料"><a href="#透過Apps-Script讀取Google試算表資料" class="headerlink" title="透過Apps Script讀取Google試算表資料"></a>透過Apps Script讀取Google試算表資料</h2><p>接下來請將下列程式碼貼至你們的專案當中。</p>
<p><strong>讀取Google試算表範例</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">///讀取測試</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readSheetTest</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> sheetId=<span class="string">&#x27;輸入試算表編號&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">GetSheetData</span>(sheetId, <span class="string">&#x27;工作表1&#x27;</span>, <span class="string">&#x27;!A1:C&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///依試算表編號與範圍讀取資料</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">GetSheetData</span>(<span class="params">sheetId, sheetName, range</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> spreadsheetId = sheetId;</span><br><span class="line">    <span class="keyword">var</span> rangeName = <span class="string">`<span class="subst">$&#123;sheetName&#125;</span><span class="subst">$&#123;range&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">var</span> values = <span class="title class_">Sheets</span>.<span class="property">Spreadsheets</span>.<span class="property">Values</span>.<span class="title function_">get</span>(spreadsheetId, rangeName).<span class="property">values</span>;</span><br><span class="line">    <span class="keyword">if</span> (!values) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No data fond in google sheet&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>撰寫完成並按下儲存鍵後，執行readSheetTest方法，剛剛在Google試算表中撰寫的資料全部都被拉出來了，我們只要將這個方法與上述API部署方法相互結合即可透過API服務取得資料，下篇文章將會分享儲存資料的寫法。<br><img src="/image/IT/20210423/14.jpg"><br><img src="/image/IT/20210423/15.jpg"></p>
<h1 id="完整程式碼"><a href="#完整程式碼" class="headerlink" title="完整程式碼"></a>完整程式碼</h1><p>code.gs</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _sheetId=<span class="string">&#x27;輸入你的試算表ID&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doGet</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data =<span class="title class_">GetSheetData</span>(_sheetId, <span class="string">&#x27;工作表1&#x27;</span>, <span class="string">&#x27;!A1:C&#x27;</span>);<span class="comment">//模擬取的的資料</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data))</span><br><span class="line">      .<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>); <span class="comment">//將文字轉為JSON格式</span></span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(err);<span class="comment">//顯示錯誤訊息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello Google Apps Script:<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readSheetTest</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">GetSheetData</span>(_sheetId, <span class="string">&#x27;工作表1&#x27;</span>, <span class="string">&#x27;!A1:C&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">GetSheetData</span>(<span class="params">sheetId, sheetName, range</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> spreadsheetId = sheetId;</span><br><span class="line">    <span class="keyword">var</span> rangeName = <span class="string">`<span class="subst">$&#123;sheetName&#125;</span><span class="subst">$&#123;range&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">var</span> values = <span class="title class_">Sheets</span>.<span class="property">Spreadsheets</span>.<span class="property">Values</span>.<span class="title function_">get</span>(spreadsheetId, rangeName).<span class="property">values</span>;</span><br><span class="line">    <span class="keyword">if</span> (!values) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No data fond in google sheet&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技術分享</category>
      </categories>
      <tags>
        <tag>google-app-script</tag>
      </tags>
  </entry>
</search>
